/*import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Footer from "./components/Footer";
import Hero from "./components/Hero";
import { Header } from "./components/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
/*
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Header />
      <Hero/>

        {children}
        <Footer/>
      </body>
    </html>
  );
}
*/
// src/app/layout.tsx

"use client"
import React from "react";
import { Header } from "@/components/Header";
import Footer from "@/components/Footer";
import { usePathname } from "next/navigation";  // Ensure you're using the correct hook
import Hero from "@/components/Hero"; // Hero component
import "./globals.css";

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const pathname = usePathname();  // Get the current path
  const isHomePage = pathname === "/";  // Check if we're on the homepage

  return (
    <html lang="en">
      <body className="antialiased">
        <Header />
        <main>
          {isHomePage && <Hero />}  {/* Only display Hero on homepage */}
          {children}  {/* Render page content for other routes */}
        </main>
        <Footer />
      </body>
    </html>
  );
}